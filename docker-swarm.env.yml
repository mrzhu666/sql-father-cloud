# 本地测试
version: '3'
services:
  redis:
    image: redis
    environment:
      - REDIS_PASSWORD=123456
    ports:
      - "6379:6379"
    networks:
      - mynetwork
#    volumes:
#      - ./.redis-data:/data # 持久化
    deploy:
      placement:
        constraints: [node.labels.role==notebook_wsl]

  mysql:
    image: mysql:5.7.43
    environment:
      MYSQL_ROOT_PASSWORD: 123456 # root 用户密码
    ports:
      - "3306:3306" # 端口映射
    volumes:
      - ./.mysql-data:/var/lib/mysql # 将数据目录挂载到本地目录以进行持久化
      - ./mysql-init/init:/docker-entrypoint-initdb.d # 自动执行启动脚本
      - ./mysql-init/sql:/opt/sql  # 初始化数据
      - ./mysql-init/backup:/opt/backup  # 数据备份目录
#    restart: always # 崩溃后自动重启
    networks:
      - mynetwork # 指定网络
#    healthcheck:  # 检查容器是否健康运行。
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#      interval: 5s
#      timeout: 10s
#      retries: 10
    deploy:
      placement:
        constraints: [ node.labels.role==desktop_wsl ]

  nacos:
    image: nacos/nacos-server:v2.2.3
    environment:
      PREFER_HOST_MODE: hostname # 支持 hostname
      MODE: standalone # 单节点模式启动
      SPRING_DATASOURCE_PLATFORM: mysql
      TZ: Asia/Shanghai # 控制时区
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: nacos_devtest
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
#    volumes:
#      - ./.nacos-standalone-logs/:/home/nacos/logs
#      - ./nacos-init/application.properties:/home/nacos/conf/application.properties
    networks:
      - mynetwork
    depends_on:
      - mysql
    deploy:
      placement:
        constraints: [ node.labels.role==notebook_wsl ]

  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=123456
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork
    depends_on:
      - mysql
    deploy:
      placement:
        constraints: [ node.labels.role==notebook_wsl ]

networks:
  mynetwork:
    external: true  # 网络在外部用docker network创建，而不是在部署时创建

